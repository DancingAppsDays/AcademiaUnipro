// src/app/core/services/instructor.service.ts
import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';

export interface EnhancedInstructor {
  _id: string;
  name: string;
  title?: string;
  subtitle?: string;
  photoUrl: string;
  bio: string;
  specialties: string[];
  professionalProfile?: string;
  certifications?: string[];
  experience?: string[];
  rawText?: string; // Store original formatted text
  categories: string[]; // Which course categories this instructor teaches
}

@Injectable({
  providedIn: 'root'
})
export class InstructorService {
  
  // Enhanced instructor database with formatted content
  private instructorDatabase: { [key: string]: EnhancedInstructor } = {
    'ricardo-vazquez': {
      _id: 'instr-ricardo-1',
      name: 'Ing. Ricardo Geciel V√°zquez Medina',
      title: 'Especialista en Seguridad Industrial y Aplicaci√≥n de Normas STPS',
      subtitle: 'Instructor Certificado por CONOCER EC0217 | L√≠der en formaci√≥n para entornos de alto riesgo',
      photoUrl: 'assets/images/instructors/ricardo-vazquez.jpg',
      bio: `El Ing. Ricardo Geciel es un instructor con m√°s de 10 a√±os de experiencia en seguridad industrial, higiene ocupacional y normativas STPS. Certificado bajo el est√°ndar EC0217 de CONOCER, actualmente forma parte del equipo de instructores acreditados de UNIPROTEC, capacitando a l√≠deres, t√©cnicos y operadores en empresas de clase mundial.

Ha sido coordinador de seguridad en el proyecto Paint Shop de General Motors M√©xico, liderando estrategias de prevenci√≥n de riesgos, formaci√≥n de l√≠deres de seguridad, auditor√≠as e implementaci√≥n de AMEF. Su estilo de ense√±anza se basa en experiencias reales de campo, metodolog√≠as gamificadas y un enfoque directo y pr√°ctico.`,
      specialties: ['Seguridad Industrial', 'Normativa STPS', 'Higiene Ocupacional', 'Prevenci√≥n de Riesgos'],
      professionalProfile: `El Ing. Ricardo Geciel es un instructor con m√°s de 10 a√±os de experiencia en seguridad industrial, higiene ocupacional y normativas STPS. Certificado bajo el est√°ndar EC0217 de CONOCER, actualmente forma parte del equipo de instructores acreditados de UNIPROTEC, capacitando a l√≠deres, t√©cnicos y operadores en empresas de clase mundial.

Ha sido coordinador de seguridad en el proyecto Paint Shop de General Motors M√©xico, liderando estrategias de prevenci√≥n de riesgos, formaci√≥n de l√≠deres de seguridad, auditor√≠as e implementaci√≥n de AMEF. Su estilo de ense√±anza se basa en experiencias reales de campo, metodolog√≠as gamificadas y un enfoque directo y pr√°ctico.`,
      certifications: [
        'Ingeniero Industrial',
        'T√©cnico en Seguridad e Higiene Industrial ‚Äì UPAV Plantel Silao',
        'Certificaci√≥n EC0217 ‚Äì Impartici√≥n de cursos presenciales grupales (CONOCER)',
        'Certificaci√≥n EC0391 ‚Äì Verificaci√≥n de condiciones de Seguridad e Higiene (2024)',
        'Diplomado OSHA ‚Äì Safety Solutions, Arizona, EE.UU. (2017)',
        'Diplomado en Seguridad e Higiene Industrial y Salud Ocupacional ‚Äì UNAM (120 hrs.)',
        'Diplomado ISO 9001:2015, 14001:2015, 45001:2018 ‚Äì CAPINSER (2024)',
        'Curso en Metodolog√≠as Gamificadas para la Ense√±anza ‚Äì Grupo E2 (2020)',
        'Curso de Equipos M√≥viles (montacargas, gr√∫as, polipastos, etc.) ‚Äì ILACI (2022)',
        'Diplomado L√≠der de Seguridad Industrial ‚Äì Group M+W / Proyecto BDF NIVEA (2021)',
        'Occupational Health & Safety Specialist ‚Äì AIFYC Texas, 100 hrs. (2024)',
        'Diplomado Nivel 3 ‚Äì Seguridad, Salud, Medio Ambiente y Calidad (2024)'
      ],
      experience: [
        'Coordinador de seguridad en proyecto Paint Shop de General Motors M√©xico',
        'Instructor acreditado de UNIPROTEC',
        'L√≠der en estrategias de prevenci√≥n de riesgos',
        'Especialista en formaci√≥n de l√≠deres de seguridad',
        'Auditor e implementador de AMEF'
      ],
      categories: ['Normativas Clave', 'Seguridad Especializada'],
      rawText: `**Ing. Ricardo Geciel V√°zquez Medina**
**Especialista en Seguridad Industrial y Aplicaci√≥n de Normas STPS ***Instructor Certificado por CONOCER EC0217 | L√≠der en formaci√≥n para entornos de alto riesgo*

**üß© Perfil Profesional**
El Ing. Ricardo Geciel es un instructor con m√°s de 10 a√±os de experiencia en seguridad industrial, higiene ocupacional y normativas STPS. Certificado bajo el est√°ndar **EC0217 de CONOCER**, actualmente forma parte del equipo de instructores acreditados de **UNIPROTEC**, capacitando a l√≠deres, t√©cnicos y operadores en empresas de clase mundial.

Ha sido coordinador de seguridad en el proyecto Paint Shop de **General Motors M√©xico**, liderando estrategias de prevenci√≥n de riesgos, formaci√≥n de l√≠deres de seguridad, auditor√≠as e implementaci√≥n de AMEF. Su estilo de ense√±anza se basa en experiencias reales de campo, metodolog√≠as gamificadas y un enfoque directo y pr√°ctico.

**üìö Formaci√≥n y Certificaciones Relevantes**
* **Ingeniero Industrial**
* **T√©cnico en Seguridad e Higiene Industrial ‚Äì UPAV Plantel Silao**
* **Certificaci√≥n EC0217 ‚Äì Impartici√≥n de cursos presenciales grupales (CONOCER)**
* **Certificaci√≥n EC0391 ‚Äì Verificaci√≥n de condiciones de Seguridad e Higiene (2024)**
* **Diplomado OSHA ‚Äì Safety Solutions, Arizona, EE.UU. (2017)**
* **Diplomado en Seguridad e Higiene Industrial y Salud Ocupacional ‚Äì UNAM (120 hrs.)**
* **Diplomado ISO 9001:2015, 14001:2015, 45001:2018 ‚Äì CAPINSER (2024)**
* **Curso en Metodolog√≠as Gamificadas para la Ense√±anza ‚Äì Grupo E2 (2020)**
* **Curso de Equipos M√≥viles (montacargas, gr√∫as, polipastos, etc.) ‚Äì ILACI (2022)**
* **Diplomado L√≠der de Seguridad Industrial ‚Äì Group M+W / Proyecto BDF NIVEA (2021)**
* **Occupational Health & Safety Specialist ‚Äì AIFYC Texas, 100 hrs. (2024)**
* **Diplomado Nivel 3 ‚Äì Seguridad, Salud, Medio Ambiente y Calidad (2024)**`
    },
    
    'joram-morales': {
      _id: 'instr-joram-1',
      name: 'Ing. Joram Morales Cabrera',
      title: 'Especialista en Seguridad Industrial y Brigadas de Emergencia',
      subtitle: 'Instructor Certificado por CONOCER EC0217 | Experto en ambientes de alto riesgo',
      photoUrl: 'assets/images/instructors/joram-morales.jpg',
      bio: `El Ing. Joram Morales es un profesional con s√≥lida experiencia en seguridad industrial, salud ocupacional y respuesta ante emergencias, tanto en campo como en formaci√≥n de talento t√©cnico. Cuenta con certificaci√≥n oficial EC0217 de CONOCER, adem√°s de una trayectoria destacada como supervisor de seguridad en industrias automotrices de alto nivel como BMW, Hutchinson y DURR M√©xico.

Actualmente forma parte del equipo de instructores acreditados de UNIPROTEC, donde imparte cursos pr√°cticos y actualizados en temas de NOM-STPS, brigadas de emergencia, medio ambiente y ergonom√≠a industrial, integrando m√©todos gamificados y recursos de aprendizaje virtual.`,
      specialties: ['Seguridad Industrial', 'Respuesta a Emergencias', 'Normativa STPS', 'Formaci√≥n de Brigadas'],
      professionalProfile: `El Ing. Joram Morales es un profesional con s√≥lida experiencia en seguridad industrial, salud ocupacional y respuesta ante emergencias, tanto en campo como en formaci√≥n de talento t√©cnico. Cuenta con certificaci√≥n oficial EC0217 de CONOCER, adem√°s de una trayectoria destacada como supervisor de seguridad en industrias automotrices de alto nivel como BMW, Hutchinson y DURR M√©xico.

Actualmente forma parte del equipo de instructores acreditados de UNIPROTEC, donde imparte cursos pr√°cticos y actualizados en temas de NOM-STPS, brigadas de emergencia, medio ambiente y ergonom√≠a industrial, integrando m√©todos gamificados y recursos de aprendizaje virtual.`,
      categories: ['Protecci√≥n y Prevenci√≥n', 'Seguridad Especializada'],
      certifications: [
        'Certificaci√≥n EC0217 de CONOCER',
        'Supervisor de Seguridad Industrial',
        'Especialista en Brigadas de Emergencia'
      ],
      experience: [
        'Supervisor de seguridad en BMW',
        'Supervisor de seguridad en Hutchinson',
        'Supervisor de seguridad en DURR M√©xico',
        'Instructor acreditado de UNIPROTEC'
      ]
    },

    'default': {
      _id: 'instr-default-1',
      name: 'Instructor UNIPROTEC',
      title: 'Especialista en Seguridad Industrial',
      subtitle: 'Instructor Certificado',
      photoUrl: 'assets/images/instructors/default-instructor.png',
      bio: 'Instructor especializado con amplia experiencia en seguridad industrial y capacitaci√≥n empresarial.',
      specialties: ['Seguridad Industrial', 'Capacitaci√≥n Empresarial'],
      professionalProfile: 'Instructor especializado con amplia experiencia en seguridad industrial y capacitaci√≥n empresarial.',
      categories: ['Desarrollo Profesional'],
      certifications: [],
      experience: []
    }
  };

  // Course category to instructor mapping
  private courseInstructorMapping: { [courseId: string]: string } = {
    // Map specific course IDs to instructor keys
    '67fabd7aed988286dbb4d26f': 'ricardo-vazquez', //maquinarioa curso
    'brigadas-curso': 'joram-morales',
    '68016ba6dacd51ff0543002b': 'joram-morales', // manejo de sustancias qu√≠micas
    // Add more mappings as needed
  };

  // Category-based fallback mapping
  private categoryInstructorMapping: { [category: string]: string } = {
    'Normativas Clave': 'ricardo-vazquez',
    'Seguridad Especializada': 'joram-morales', 
    'Protecci√≥n y Prevenci√≥n': 'joram-morales',
    'Desarrollo Profesional': 'default'
  };

  constructor() { }

  /**
   * Get instructor for a specific course
   * @param courseId Course ID
   * @param category Course category (fallback)
   * @returns Observable of EnhancedInstructor
   */
  getInstructorForCourse(courseId: string, category?: string): Observable<EnhancedInstructor> {
    // First try direct course mapping
    let instructorKey = this.courseInstructorMapping[courseId];
    
    // If no direct mapping, use category mapping
    if (!instructorKey && category) {
      instructorKey = this.categoryInstructorMapping[category];
    }
    
    // Fallback to default
    if (!instructorKey) {
      instructorKey = 'default';
    }
    
    const instructor = this.instructorDatabase[instructorKey] || this.instructorDatabase['default'];
    return of(instructor);
  }

  /**
   * Get instructor by category (legacy method)
   * @param category Course category
   * @returns Observable of EnhancedInstructor
   */
  getMockInstructorByCategory(category: string): Observable<EnhancedInstructor> {
    const instructorKey = this.categoryInstructorMapping[category] || 'default';
    const instructor = this.instructorDatabase[instructorKey];
    return of(instructor);
  }

  /**
   * Get instructor by key
   * @param key Instructor key
   * @returns Observable of EnhancedInstructor
   */
  getInstructorByKey(key: string): Observable<EnhancedInstructor> {
    const instructor = this.instructorDatabase[key] || this.instructorDatabase['default'];
    return of(instructor);
  }

  /**
   * Get all available instructors
   * @returns Observable array of EnhancedInstructor objects
   */
  getAllInstructors(): Observable<EnhancedInstructor[]> {
    return of(Object.values(this.instructorDatabase));
  }

  /**
   * Parse formatted instructor text (utility method for adding new instructors)
   * @param rawText Formatted instructor text
   * @returns Parsed instructor data
   */
  parseInstructorText(rawText: string): Partial<EnhancedInstructor> {
    const lines = rawText.split('\n').filter(line => line.trim());
    
    let name = '';
    let title = '';
    let subtitle = '';
    let bio = '';
    const certifications: string[] = [];
    let inCertifications = false;
    
    for (let i = 0; i < lines.length; i++) {
      const line = lines[i].trim();
      
      // Extract name (first bold line)
      if (line.startsWith('**') && !name && !line.includes('üß©') && !line.includes('üìö')) {
        name = line.replace(/\*\*/g, '').trim();
        continue;
      }
      
      // Extract title/subtitle
      if (line.startsWith('**') && name && !title && !line.includes('üß©') && !line.includes('üìö')) {
        const titleText = line.replace(/\*\*/g, '').trim();
        if (titleText.includes('|')) {
          const parts = titleText.split('|');
          title = parts[0].trim();
          subtitle = parts[1].trim();
        } else {
          title = titleText;
        }
        continue;
      }
      
      // Start of certifications section
      if (line.includes('üìö') || line.toLowerCase().includes('certificaciones')) {
        inCertifications = true;
        continue;
      }
      
      // Certification items
      if (inCertifications && line.startsWith('*')) {
        certifications.push(line.replace(/^\*\s*/, '').replace(/\*\*/g, '').trim());
        continue;
      }
      
      // Bio content (before certifications)
      if (!inCertifications && !line.includes('üß©') && !line.startsWith('**') && line.length > 10) {
        bio += (bio ? '\n\n' : '') + line;
      }
    }
    
    return {
      name,
      title,
      subtitle,
      bio: bio.trim(),
      certifications,
      rawText
    };
  }

  /**
   * Add or update instructor in the database
   * @param key Instructor key
   * @param instructorData Instructor data
   */
  addInstructor(key: string, instructorData: EnhancedInstructor): void {
    this.instructorDatabase[key] = instructorData;
  }

  /**
   * Map course to instructor
   * @param courseId Course ID
   * @param instructorKey Instructor key
   */
  mapCourseToInstructor(courseId: string, instructorKey: string): void {
    this.courseInstructorMapping[courseId] = instructorKey;
  }
}